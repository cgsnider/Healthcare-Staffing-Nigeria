{"ast":null,"code":"var _jsxFileName = \"/Users/charles/GaTech/cs3311/Healthcare-Staffing-Nigeria/client/src/components/pages/professionals/Jobs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport JobListing from '../../parts/JobListings';\nimport TopBar from '../../parts/TopBar';\nimport '../../styling/Jobs.css';\nimport '../../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Jobs(props) {\n  _s();\n\n  let key = 0;\n  useEffect(() => {\n    fetchPostings();\n  }, []);\n  const [postings, setPostings] = useState([]);\n\n  const fetchPostings = async () => {\n    const data = await fetch('/api/jobs');\n    const items = await data.json();\n    setPostings(items);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(OptionsBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"prof_job_grid\",\n      children: postings.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"prof_job_node\",\n        children: /*#__PURE__*/_jsxDEV(JobListing, {\n          link: \"http://localhost:3000\",\n          image: e.image,\n          position: e.position,\n          location: e.location,\n          shifts: e.shifts,\n          salary: e.salary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, key++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Jobs, \"tFREpR7We6EJWCZxfI0MedRg3pE=\");\n\n_c = Jobs;\n\nfunction OptionsBar(props) {\n  window.onscroll = () => {\n    stickBar();\n  };\n\n  let optBar = document.getElementById(\"opt_bar\");\n  let sticky = optBar.offsetTop;\n\n  function stickBar() {\n    if (window.pageYOffset >= sticky) {\n      optBar.classList.add(\"sticky\");\n    } else {\n      optBar.classList.remove(\"sticky\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"opt_bar\",\n    className: \"options_bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Location A-Z\",\n      className: \"button_primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Postion A-Z\",\n      className: \"button_primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Hours\",\n      className: \"button_primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Pay\",\n      className: \"button_primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Search: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = OptionsBar;\nexport default Jobs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Jobs\");\n$RefreshReg$(_c2, \"OptionsBar\");","map":{"version":3,"sources":["/Users/charles/GaTech/cs3311/Healthcare-Staffing-Nigeria/client/src/components/pages/professionals/Jobs.jsx"],"names":["React","useEffect","useState","JobListing","TopBar","Jobs","props","key","fetchPostings","postings","setPostings","data","fetch","items","json","map","e","image","position","location","shifts","salary","OptionsBar","window","onscroll","stickBar","optBar","document","getElementById","sticky","offsetTop","pageYOffset","classList","add","remove"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport JobListing from '../../parts/JobListings'\nimport TopBar from '../../parts/TopBar';\n\nimport '../../styling/Jobs.css'\nimport '../../../App.css'\n\nfunction Jobs (props) {\n\n    let key = 0;\n\n    useEffect( ()=> {\n        fetchPostings();\n    }, [])\n\n    const [postings, setPostings] = useState([]);\n\n    const fetchPostings = async() => {\n        const data = await fetch('/api/jobs');\n        const items = await data.json();\n        setPostings(items);\n    }\n\n    \n\n\n    return (\n        <div>\n            <TopBar />\n            <OptionsBar />\n            <ul className=\"prof_job_grid\">\n\n                {postings.map(e => (\n                    <li className='prof_job_node' key={key++}>\n                        <JobListing link=\"http://localhost:3000\" \n                        image={e.image}\n                        position={e.position}\n                        location={e.location}\n                        shifts={e.shifts}\n                        salary={e.salary}/>\n                    </li>\n                ))}\n\n        \n            </ul>\n        </div>\n    )\n\n}\n\n\nfunction OptionsBar (props) {\n\n\n    window.onscroll = () => {stickBar()};\n\n    let optBar = document.getElementById(\"opt_bar\");\n\n    let sticky = optBar.offsetTop;\n\n    function stickBar () {\n        if (window.pageYOffset >= sticky) {\n            optBar.classList.add(\"sticky\")\n          } else {\n            optBar.classList.remove(\"sticky\");\n          }\n    }\n\n    return (\n        <div id=\"opt_bar\" className='options_bar'>\n            <input type='button' value='Location A-Z' className='button_primary'/>\n            <input type='button' value='Postion A-Z' className='button_primary'/>\n            <input type='button' value='Hours' className='button_primary'/>\n            <input type='button' value='Pay' className='button_primary'/>\n            <label>{\" Search: \"}</label>\n            <input type='text' />\n        </div>\n    )\n}\n\nexport default Jobs\n"]},"metadata":{},"sourceType":"module"}